{"version":3,"sources":["../src/index.js"],"names":["express","require","app","bodyParser","jwt","settings","httpMsg","user","set","secert","use","urlencoded","extended","json","get","req","resp","send","webPort","apiRoute","Router","post","login","next","token","body","param","headers","verify","err","decoded","success","message","status","showHome","getList","params","id","add","put","update","delete","listen","console","log"],"mappings":"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","file":"index.js","sourcesContent":["var express = require('express');\nvar app = express();\nvar bodyParser = require('body-parser');\nvar jwt = require('jsonwebtoken');\n\nvar settings = require('./settings');\nvar httpMsg = require('./core/httpMsg');\nvar user = require('./controller/user');\n\napp.set('secert', settings.secert);\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\n// basic route (http://localhost:<port>)\napp.get('/', function(req, resp) {\n    resp.send('The API is at the http://localhost:' + settings.webPort + '/api');\n});\n\nvar apiRoute = express.Router();\napiRoute.post('/authenticate', function(req, resp) {    \n    user.login(req, resp);\n});\n\n\n// ---------------------------------------------------------\n// route middleware to authenticate and check token\n// ---------------------------------------------------------\napiRoute.use(function(req, resp, next) {\n\n    var token = req.body.token || req.param('token') || req.headers['x-access-token'];\n\n    if (token){\n        // verifies secret and checks exp\n\t\tjwt.verify(token, app.get('secert'), function(err, decoded) {\t\t\t\n\t\t\tif (err) {\n\t\t\t\treturn resp.json({ success: false, message: 'Failed to authenticate token.' });\t\t\n\t\t\t} else {\n\t\t\t\t// if everything is good, save to request for use in other routes\n\t\t\t\treq.decoded = decoded;\t\n\t\t\t\tnext();\n\t\t\t}\n\t\t});\n    }\n    else {\n        // if there is no token\n\t\t// return an error\n\t\treturn resp.status(403).send({ \n\t\t\tsuccess: false, \n\t\t\tmessage: 'No token provided.'\n\t\t});\n    }\n});\n\napiRoute.get('/', function(req, resp) {\n    httpMsg.showHome(req, resp);\n});\n\napiRoute.get('/users', function(req, resp) {\n    user.getList(req, resp);\n});\n\napiRoute.get('/users/:id', function(req, resp) {\n\tuser.get(req, resp, req.params.id);\n});\n\napiRoute.post('/users', function(req, resp) {\n\tuser.add(req, resp);\n});\n\napiRoute.put('/users', function(req, resp) {\n\tuser.update(req, resp);\n});\n\napiRoute.delete('/users', function(req, resp) {\n\tuser.delete(req, resp);\n});\n\napp.use('/api', apiRoute);\n\napp.listen(settings.webPort);\nconsole.log('Service started at http://localhost:' + settings.webPort);\n"]}