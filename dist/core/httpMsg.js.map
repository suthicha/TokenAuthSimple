{"version":3,"sources":["../../src/core/httpMsg.js"],"names":["settings","require","exports","show500","req","resp","err","writeHead","write","JSON","stringify","data","end","sendJson","show405","show404","show403","show413","show200","showHome","url","operations","description","sendAuthFail","errText","success","errorText"],"mappings":"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","file":"httpMsg.js","sourcesContent":["var settings = require(\"../settings\");\n\nexports.show500 = function(req, resp, err){\n    resp.writeHead(500, \"Internal Error occurred\", { \"Content-Type\": \"application/json\" });\n    resp.write(JSON.stringify({ data: \"ERROR occurred: \" + err }));\n    resp.end();\n}\n\nexports.sendJson = function(req, resp, data){\n    resp.writeHead(200, { \"Content-Type\": \"application/json\"});\n    if(data){\n      resp.write(JSON.stringify(data));\n    }\n    resp.end();\n}\n\nexports.show405 = function(req, resp){\n    resp.writeHead(405, \"Method not supported\", { \"Content-Type\": \"application/json\" });\n    resp.write(JSON.stringify({ data: \"Method not supported\" }));\n    resp.end();\n}\n\n\nexports.show404 = function(req, resp){\n    resp.writeHead(404, \"Resource not found.\", { \"Content-Type\": \"application/json\" });\n    resp.write(JSON.stringify({ data: \"Resource not found\" }));\n    resp.end();\n}\n\nexports.show403 = function(req, resp){\n    resp.writeHead(403, \"Failed to authenticate token.\", { \"Content-Type\": \"application/json\" });\n    resp.write(JSON.stringify({ data: \"Failed to authenticate token\" }));\n    resp.end();\n}\n\n\nexports.show413 = function(req, resp){\n    resp.writeHead(413, \"Request Entity too Large\", { \"Content-Type\": \"application/json\" });\n    resp.write(JSON.stringify({ data: \"Request Entity too Large\" }));\n    resp.end();\n}\n\nexports.show200 = function(req, resp){\n    resp.writeHead(200,{ \"Content-Type\": \"application/json\" });\n    resp.end();\n}\n\nexports.showHome = function(req, resp){\n    resp.writeHead(200, {\"Content-Type\": \"application/json\"});\n    resp.write(JSON.stringify([\n      { url: \"/users\", operations: \"GET\", description:\"To List all users.\" },\n      { url: \"/users/<id>\", operations: \"GET\", description:\"To Search a user.\" }\n    ]));\n    resp.end();\n}\n\nexports.sendAuthFail = function(req, resp, errText){\n    resp.writeHead(200, {\"Content-Type\": \"application/json\"});\n    resp.write(JSON.stringify({\n                success: false,\n                errorText: errText\n            }))\n    resp.end();\n}\n\n\n"]}