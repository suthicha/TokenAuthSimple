{"version":3,"sources":["../../src/controller/user.js"],"names":["db","require","httpMsg","settings","util","jwt","exports","login","req","resp","data","Username","body","UPassword","Password","sql","format","executeSql","callback","err","show500","writeHead","length","user","token","sign","FullName","Fullname","secert","expiresIn","write","JSON","stringify","success","end","Error","ex","getList","sendJson"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,YAAR,CAAT;AACA,IAAIC,UAAUD,QAAQ,iBAAR,CAAd;AACA,IAAIE,WAAWF,QAAQ,aAAR,CAAf;AACA,IAAIG,OAAOH,QAAQ,MAAR,CAAX;AACA,IAAII,MAAMJ,QAAQ,cAAR,CAAV;;AAEAK,QAAQC,KAAR,GAAgB,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAChC,QAAG;;AAEC,YAAIC,OAAO;AACPC,sBAAUH,IAAII,IAAJ,CAASD,QADZ;AAEPE,uBAAWL,IAAII,IAAJ,CAASE;AAFb,SAAX;AAIA,YAAGJ,IAAH,EAAQ;;AAEJ,gBAAIK,MAAMX,KAAKY,MAAL,CAAY,6EAAZ,EAA2FN,KAAKC,QAAhG,EAA0GD,KAAKG,SAA/G,CAAV;;AAEAb,eAAGiB,UAAH,CAAcF,GAAd,EAAmB,UAASG,QAAT,EAAmBC,GAAnB,EAAwB;AACvC,oBAAIA,GAAJ,EAAQ;AACJjB,4BAAQkB,OAAR,CAAgBZ,GAAhB,EAAqBC,IAArB,EAA2BU,GAA3B;AACH,iBAFD,MAEM;;AAEFV,yBAAKY,SAAL,CAAe,GAAf,EAAoB,EAAC,gBAAe,kBAAhB,EAApB;AACA,wBAAIX,QAAQQ,SAASI,MAAT,GAAkB,CAA9B,EAAgC;;AAE5B,4BAAIC,OAAOL,SAAS,CAAT,CAAX;AACA,4BAAIK,KAAKZ,QAAL,KAAkBH,IAAII,IAAJ,CAASD,QAA/B,EACA;AACI,gCAAIa,QAAQnB,IAAIoB,IAAJ,CAAS;AACjBd,0CAAUY,KAAKZ,QADE;AAEjBe,0CAAUH,KAAKI;AAFE,6BAAT,EAGLxB,SAASyB,MAHJ,EAGY;AACpBC,2CAAW,KADS,CACH;AADG,6BAHZ,CAAZ;;AAOApB,iCAAKqB,KAAL,CAAWC,KAAKC,SAAL,CAAe;AACtBC,yCAAS,IADa;AAEtBN,0CAAUJ,KAAKI,QAFO;AAGtBH,uCAAOA,KAHe,EAAf,CAAX;AAKH;AAEJ;;AAEDf,yBAAKyB,GAAL;AACH;AACJ,aA7BD;AA8BH,SAlCD,MAmCK;AACD,kBAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;AAEJ,KA7CD,CA6CC,OAAOC,EAAP,EAAW;AACRlC,gBAAQkB,OAAR,CAAgBZ,GAAhB,EAAqBC,IAArB,EAA2B2B,EAA3B;AACH;AACJ,CAjDD;;AAoDA9B,QAAQ+B,OAAR,GAAkB,UAAS7B,GAAT,EAAcC,IAAd,EAAmB;;AAEjCT,OAAGiB,UAAH,wBAAqC,UAASP,IAAT,EAAeS,GAAf,EAAmB;AACpD,YAAGA,GAAH,EAAO;AACLjB,oBAAQkB,OAAR,CAAgBZ,GAAhB,EAAqBC,IAArB,EAA2BU,GAA3B;AACD,SAFD,MAGK;AACHjB,oBAAQoC,QAAR,CAAiB9B,GAAjB,EAAsBC,IAAtB,EAA4BC,IAA5B;AACD;AACJ,KAPD;AASH,CAXD","file":"user.js","sourcesContent":["var db = require('../core/db');\nvar httpMsg = require('../core/httpMsg');\nvar settings = require('../settings');\nvar util = require('util');\nvar jwt = require('jsonwebtoken');\n\nexports.login = function(req, resp) {\n    try{\n        \n        var data = {\n            Username: req.body.Username,\n            UPassword: req.body.Password\n        }\n        if(data){\n\n            var sql = util.format(\"SELECT Username, Fullname FROM Users WHERE Username='%s' AND UPassword='%s'\", data.Username, data.UPassword);\n\n            db.executeSql(sql, function(callback, err) { \n                if (err){\n                    httpMsg.show500(req, resp, err);\n                }else {\n                    \n                    resp.writeHead(200, {\"Content-Type\":\"application/json\"});\n                    if (data && callback.length > 0){\n\n                        var user = callback[0];\n                        if (user.Username === req.body.Username)\n                        {\n                            var token = jwt.sign({ \n                                Username: user.Username, \n                                FullName: user.Fullname\n                                }, settings.secert, {\n                                expiresIn: 86400 // expires in 24 hours\n                            });\n                        \n                            resp.write(JSON.stringify({\n                                success: true, \n                                Fullname: user.Fullname, \n                                token: token})\n                            );\n                        }\n                        \n                    }\n                    \n                    resp.end();\n                }\n            });\n        }\n        else {\n            throw new Error(\"Input not valid\");\n        }\n\n    }catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n};\n\n\nexports.getList = function(req, resp){\n\n    db.executeSql(`select * from users`, function(data, err){\n        if(err){\n          httpMsg.show500(req, resp, err);\n        }\n        else {\n          httpMsg.sendJson(req, resp, data);\n        }\n    });\n\n};"]}