{"version":3,"sources":["../../src/controller/user.js"],"names":["util","require","jwt","db","httpMsg","settings","exports","login","req","resp","body","Error","data","Username","UPassword","Password","sql","format","executeSql","callback","err","show500","length","user","token","sign","FullName","Fullname","secert","expiresIn","writeHead","write","JSON","stringify","success","end","sendAuthFail","ex","getList","sendJson","get","id","userId","parseInt","add","show200","update","TrxId","slice","console","log","delete"],"mappings":"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","file":"user.js","sourcesContent":["var util = require('util');\nvar jwt = require('jsonwebtoken');\n\nvar db = require('../core/db');\nvar httpMsg = require('../core/httpMsg');\nvar settings = require('../settings');\n\nexports.login = function(req, resp) {\n    \n    try{\n        if (!req.body) throw new Error(\"Input not valid\");\n        var data = {\n            Username: req.body.Username,\n            UPassword: req.body.Password\n        }\n        \n        if(data){\n            var sql = util.format(\"SELECT Username, Fullname FROM Users WHERE Username='%s' AND UPassword='%s'\", data.Username, data.UPassword);\n            db.executeSql(sql, function(callback, err) { \n                if (err){\n                    httpMsg.show500(req, resp, err);\n                }else {\n                    if (data && callback.length > 0){\n                        var user = callback[0];\n                        if (user.Username === req.body.Username)\n                        {\n                            var token = jwt.sign({ \n                                Username: user.Username, \n                                FullName: user.Fullname\n                                }, settings.secert, {\n                                expiresIn: 86400 // expires in 24 hours\n                            });\n                        \n                            resp.writeHead(200, {\"Content-Type\":\"application/json\"});                        \n                            resp.write(JSON.stringify({\n                                success: true, \n                                Fullname: user.Fullname, \n                                token: token}));\n                            resp.end();\n\n                        }else{\n                            httpMsg.sendAuthFail(req, resp, \"Username not match.\");\n                        }\n                    }\n                    else {\n                        httpMsg.sendAuthFail(req, resp, \"Find not found Username: \" + data.Username);\n                    }\n                }\n            });\n        }\n        else {\n            throw new Error(\"Input not valid\");\n        }\n\n    }catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n};\n\n\nexports.getList = function(req, resp){\n\n    db.executeSql(`select * from users`, function(data, err){\n        if(err){\n          httpMsg.show500(req, resp, err);\n        }\n        else {\n          httpMsg.sendJson(req, resp, data);\n        }\n    });\n\n};\n\nexports.get = function(req, resp, id){\n    try{\n\n        if (!id) throw new Error(\"Input not valid\");\n\n        var userId = parseInt(id);\n        db.executeSql(`select * from users where trxid=` + userId, function(data, err){\n            if(err){\n            httpMsg.show500(req, resp, err);\n            }\n            else {\n            httpMsg.sendJson(req, resp, data);\n            }\n        });\n\n    }catch (ex){\n        httpMsg.show500(req, resp, ex);\n    }\n\n;}\n\nexports.add = function(req, resp){\n\n    try{\n      if (!req.body) throw new Error(\"Input not valid\");\n      var data = req.body;\n      \n      if (data){\n          var sql = \"INSERT INTO Users (Username, UPassword, Fullname) values \";\n          sql += util.format(\"('%s', '%s', '%s')\", data.Username, data.UPassword, data.Fullname);\n          db.executeSql(sql, function(data, err){\n              if(err){\n                httpMsg.show500(req, resp, err);\n              }\n              else {\n                httpMsg.show200(req, resp);\n              }\n          });\n      }\n      else {\n        throw new Error(\"Input not valid\");\n      }\n\n    }\n    catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n\n}\n\nexports.update = function(req, resp){\n\n    try{\n      if (!req.body) throw new Error(\"Input not valid\");\n      var data = req.body;\n      \n      if (data){\n        if(!data.TrxId) throw new Error(\"UserId not provide\");\n        var sql = \"UPDATE Users SET\";\n\n        if (data.UPassword){\n            sql += \" UPassword = '\"+ data.UPassword +\"',\";\n        }\n\n        if (data.Fullname){\n            sql += \" Fullname = '\"+ data.Fullname +\"',\";\n        }\n\n        sql = sql.slice(0,-1);\n        sql += \" WHERE TrxId=\" + data.TrxId;\n        console.log(sql);    \n        db.executeSql(sql, function(data, err){\n            if(err){\n                httpMsg.show500(req, resp, err);\n            }\n            else {\n                httpMsg.show200(req, resp);\n            }\n        });\n      }\n      else {\n        throw new Error(\"Input not valid\");\n      }\n\n    }\n    catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n}\n\nexports.delete = function(req, resp){\n    try{\n      if (!req.body) throw new Error(\"Input not valid\");\n      var data = req.body;\n      \n      if (data){\n        if(!data.TrxId) throw new Error(\"UserId not provide\");\n        var sql = \"DELETE USERS WHERE TrxId=\" + data.TrxId;\n\n        db.executeSql(sql, function(data, err){\n            if(err){\n                httpMsg.show500(req, resp, err);\n            }\n            else {\n                httpMsg.show200(req, resp);\n            }\n        });\n      }\n      else {\n        throw new Error(\"Input not valid\");\n      }\n\n    }\n    catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n}"]}